{"version":3,"file":"static/js/503.46458273.chunk.js","mappings":"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","sources":["components/ContactsListItem/ContactsListItem.jsx","redux/contacts/contactsSelectors.js","components/ContactsList/ContactsList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","../node_modules/@mui/icons-material/Add.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { toast } from 'react-toastify';\nimport { ToastOptions } from 'services/toast-options';\n\nconst ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const deleteContactData = (id) => dispatch(deleteContact(id));\n\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const onClickDeleteContact = () => {\n    setIsDeleting(true);\n    deleteContactData(id)\n      .then((response) => {        \n        if (response.error) {\n          toast.error(`Contact wasn't deleted: ${response.payload}`, ToastOptions);\n        } else {\n          toast.info(`Contact ${name.toUpperCase()} was deleted`, ToastOptions);\n        };\n      })      \n      .finally(() => {        \n        setIsDeleting(false);\n      });\n  };\n  \n  return (    \n    <li>\n      <p>{name} - &#9743; {number}</p>\n      <div>\n        <button\n          type='button'\n          onClick={onClickDeleteContact}\n          disabled={isDeleting}            \n        >\n          {isDeleting ? 'Deleting...' : 'Delete'}\n        </button>\n      </div>\n    </li>\n  )  \n};\n\nexport default ContactsListItem;","export const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import ContactsListItem from '../ContactsListItem/ContactsListItem';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { getFilter } from 'redux/filterSlice';\n\nconst ContactsList = () => {  \n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const filter = useSelector(getFilter);  \n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {        \n    const normalizedFilter = filter.toLowerCase();\n    \n    if (contacts) {\n      return contacts.filter(contact => \n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };  \n\n  return (\n    <ul>\n      {isLoading && <b>Loading contacts...</b>}\n      {contacts && getFilteredContacts().map(contact => (\n        <ContactsListItem key={contact.id} {...contact} /> //\n      ))}     \n    </ul>\n  )\n};\n\nexport default ContactsList;","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nimport shortid from 'shortid';\nimport { toast } from 'react-toastify';\nimport { ToastOptions } from 'services/toast-options';\n\nimport styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport Stack from '@mui/material/Stack';\n\nconst CssTextField = styled(TextField)({    \n  '& label': {\n    color: '#fff',\n  },\n  '& label.Mui-focused': {\n    color: '#00f4ff',\n  },  \n  '& .MuiOutlinedInput-root': {\n    '&': {      \n      color: '#fff',       \n      marginBottom: '30px',\n    },\n    '& fieldset': {\n      borderColor: '#fff',      \n    },\n    '&:hover fieldset': {\n      borderColor: '#00f4ff',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#00f4ff',\n    },\n  },\n});\n\nfunction ContactForm() {  \n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const addContactData = data => { dispatch(addContact(data)) };\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');  \n  \n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    \n    switch (name) {      \n      case 'name':\n        setName(value);\n        break;\n      \n      case 'number':\n        setNumber(value);\n        break;\n      \n      default:\n        return;\n    };    \n  };  \n\n  const handleSubmit = e => {\n    e.preventDefault(); \n    const form = e.currentTarget;\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };    \n    \n    const checkDuplicateContact = contacts.some(contact =>\n      contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n    );\n    \n    if (checkDuplicateContact) {\n      return toast.error(`${name.toUpperCase()} is already in contacts`, ToastOptions);\n    };\n\n    if (!checkDuplicateContact) {      \n      toast.success(`${name.toUpperCase()} added to phonebook`, ToastOptions);          \n      addContactData(contact);      \n    } else {\n      toast.error('Something went wrong... :(', ToastOptions);\n    }\n    \n    setName('');\n    setNumber('');    \n    form.reset();\n  };\n  \n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} autoComplete=\"off\" sx={{ m: '80px 10px 50px auto', maxWidth: '500px', color: '#fff' }}>\n      <CssTextField id=\"outlined-basic\"\n        type=\"text\"\n        name=\"name\"        \n        label=\"Name\"\n        onChange={handleChange}        \n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        variant=\"outlined\" \n        size=\"small\"\n        fullWidth\n        required\n      />\n      \n      <CssTextField id=\"outlined-basic\"\n        type=\"tel\"\n        name=\"number\"        \n        label=\"Number\"\n        onChange={handleChange}        \n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        variant=\"outlined\" \n        size=\"small\"\n        fullWidth\n        required\n      />           \n\n      <Stack direction=\"row\" spacing={2} color='#fff' mr='24px'>\n        <Button\n          type=\"submit\"          \n          color=\"inherit\"          \n          variant=\"outlined\"\n          endIcon={<AddIcon />}\n        >\n          Add Contact\n        </Button>        \n      </Stack>      \n    </Box>\n\n\n\n\n\n    // <form onSubmit={handleSubmit} >\n    //   <label>\n    //     Name\n    //     <input\n    //       type=\"text\"\n    //       name=\"name\"\n    //       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    //       title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    //       value={name}\n    //       onChange={handleChange}\n    //       required            \n    //     />\n    //   </label>\n\n    //   <label>\n    //     Number\n    //     <input\n    //       type=\"tel\"\n    //       name=\"number\"\n    //       pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n    //       title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n    //       value={number}\n    //       onChange={handleChange}\n    //       required            \n    //     />\n    //   </label>\n    //   <button type=\"submit\">Add contact</button>\n    // </form>\n  )\n}\n\nexport default ContactForm;\n\n\n\n\n\n// return (\n//     <form onSubmit={handleSubmit} >\n//       <label>\n//         Name\n//         <input\n//           type=\"text\"\n//           name=\"name\"\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           value={name}\n//           onChange={handleChange}\n//           required            \n//         />\n//       </label>\n\n//       <label>\n//         Number\n//         <input\n//           type=\"tel\"\n//           name=\"number\"\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           value={number}\n//           onChange={handleChange}\n//           required            \n//         />\n//       </label>\n//       <button type=\"submit\">Add contact</button>\n//     </form>\n//   )","import { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter, getFilter } from 'redux/filterSlice';\n// import css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();  \n  const filter = useSelector(getFilter);\n\n  const onChangeFilter = e => {\n    dispatch(\n      setFilter(e.target.value)\n    );\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={onChangeFilter}        \n      />\n    </label>\n  )\n};\n\nexport default Filter;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport ContactsList from 'components/ContactsList';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectIsLoading } from 'redux/contacts/contactsSelectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactsList />\n    </HelmetProvider>\n  )\n};\n\nexport default Contacts;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["id","name","number","dispatch","useDispatch","useState","isDeleting","setIsDeleting","type","onClick","deleteContact","deleteContactData","then","response","error","toast","payload","ToastOptions","toUpperCase","finally","disabled","selectContacts","state","contacts","selectIsLoading","isLoading","useSelector","filter","getFilter","useEffect","fetchContacts","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","map","CssTextField","styled","TextField","color","marginBottom","borderColor","setName","setNumber","handleChange","e","currentTarget","value","Box","component","onSubmit","preventDefault","data","form","shortid","checkDuplicateContact","some","toLocaleLowerCase","addContact","reset","autoComplete","sx","m","maxWidth","label","onChange","title","variant","size","fullWidth","required","Stack","direction","spacing","mr","Button","endIcon","Add","setFilter","target","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","module","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","setCharacters","_alphabet_","length","Error","unique","split","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","i","_seed_","mask","log","LN2","step"],"sourceRoot":""}